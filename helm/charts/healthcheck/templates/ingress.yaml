{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.certManager.clusterIssuer }}
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tlsSecretName }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      # Snake API routes (with rewrite)
      - path: /snake-api
        pathType: Prefix
        backend:
          service:
            name: snake-api
            port:
              number: 8080
      # Snake frontend routes (with rewrite)
      - path: /snake
        pathType: Prefix
        backend:
          service:
            name: snake
            port:
              number: 80
      # Guestbook routes (with rewrite)
      - path: /guestbook
        pathType: Prefix
        backend:
          service:
            name: guestbook
            port:
              number: 80
      # Healthcheck routes (NO rewrite - must be last)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.service.name }}
            port:
              number: {{ .Values.service.port }}
{{- end }}